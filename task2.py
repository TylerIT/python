# 1. Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

my_list = [105, 'This is my homework', True, False, 10.2297, {'name':'Igor', 'name_dog':'Shely'}, [11, 155.255, 'Hello']]
for item in my_list:
    print(item, '  ', type(item))
 
 
 # 2. Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.
# Для заполнения списка элементов нужно использовать функцию input().
user_list = input('Введите элементы списка через пробел: ').split(' ')
print(user_list)
for item in range (0,len(user_list)-1, 2): #len(user_list)-1 --> для нечетного количества элементов, шаг 2, чтобы пребирать пары
    user_list[item], user_list[item+1] = user_list[item+1], user_list[item]
print(user_list)


# 3. Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и dict.
user_month_1 = str(input('Введите номер месяца цифрой от 1 до 12: '))
month_dict = {
    '1': 'Зима',
    '2': 'Зима',
    '3': 'Весна',
    '4': 'Весна',
    '5': 'Весна',
    '6': 'Лето',
    '7': 'Лето',
    '8': 'Лето',
    '9': 'Осень',
    '10': 'Осень',
    '11': 'Осень',
    '12': 'Зима',
}
print(f'Месяц с номером {user_month_1} это -', month_dict[user_month_1])

user_month_2 = int(input('Введите, пожалуйста, номер месяца цифрой от 1 до 12 еще раз: '))
list_month = ['Зима', 'Весна', 'Лето', 'Осень']
if 1<= user_month_2 <=2 or user_month_2 == 12:
    print(f'Mecяц с номером {user_month_2} это -', list_month[0])
elif 3 <= user_month_2 <= 5:
    print(f'Mecяц с номером {user_month_2} это -', list_month[1])
elif 6 <= user_month_2 <= 8:
    print(f'Mecяц с номером {user_month_2} это -', list_month[2])
else:
    print(f'Mecяц с номером {user_month_2} это -', list_month[3])
    
    
# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки. Строки нужно пронумеровать.
# Если слово длинное, выводить только первые 10 букв в слове.
user_text_1 = input('Введите, пожалуйста, любой текст. Не забудбте разделять вводимые слава пробелом: ').split()
i = 0
for word in user_text_1:
    i += 1
    if len(word) > 10:
            word = word[:10]
    print(f'{i}. {word}')
# способ 2
user_text_2 = input('Введите, еще раз, пожалуйста, любой текст. Не забудбте разделять вводимые слава пробелом: ').split()
for k, word in enumerate(user_text_2, 1):
    if len(word) > 10:
            word = word[:10]
    print(f'{k}. {word}')
    
    
# 5. Реализовать структуру «Рейтинг»,
# представляющую собой набор натуральных чисел,
# который не возрастает.
# У пользователя нужно запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
#
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2]

my_list = [7, 5, 3, 3, 2]
user_number = int(input('Введите рейтинг - это целое число: '))
my_list.append(user_number)
my_list.sort()
my_list.reverse()
result = (str(my_list).strip('[]'))
print(result)


# 6. (Дополнительно) Реализовать структуру данных «Товары».
# Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре.
# В кортеже должно быть два элемента — номер товара и словарь с параметрами,
# то есть характеристиками товара: название, цена, количество, единица измерения.
# Структуру нужно сформировать программно, запросив все данные у пользователя.
#
# Пример готовой структуры:
#
# [
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
# ]
# Нужно собрать аналитику о товарах.
# Реализовать словарь, в котором каждый ключ — характеристика товара, например, название.
# Тогда значение — список значений-характеристик, например, список названий товаров.
#
# Пример:
#
# {
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
# }

name_product_key = 'название'
peice = float(input('Введите цену товара: '))