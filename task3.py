#1. Реализовать функцию, принимающую два числа (позиционные аргументы)
# и выполняющую их деление. Числа запрашивать у пользователя,
# предусмотреть обработку ситуации деления на ноль.


def div(x, y):
    try:
        return x / y
    except ZeroDivisionError:
        print('На ноль делить нельзя')

x = float(input('Ведите число, котрое будет делимым: '))
y = float(input('Bедите число, котрое будет делителем: '))
print(f'Частное от деленя x={x} на y={y} будет равно: {div(x, y)}')


# 2. Выполнить функцию, которая принимает несколько параметров,
# описывающих данные пользователя: имя, фамилия, год рождения, город проживания, email, телефон.
# Функция должна принимать параметры как именованные аргументы.
# Осуществить вывод данных о пользователе одной строкой.

def print_info(name, last_name, age):
    print(f'Имя: {name}, Фамилия: {last_name}, Возраст: {age}')

print_info(name = input('введите ваше имя: '), last_name=input('Введите вашу фамилию: '), age=int(input('введите ваш возраст: ')))



# 3. Реализовать функцию my_func(),
# которая принимает три позиционных аргумента
# и возвращает сумму наибольших двух аргументов.

def summ(ls):
    ls.sort(reverse=True)
    return int(ls[0]) + int(ls[1])


ls = input('Введите три целых числа через пробел: ').split()
print(summ(ls))


# 4. Программа принимает действительное положительное число x
# и целое отрицательное число y.
# Выполните возведение числа x в степень y.
# Задание реализуйте в виде функции my_func(x, y).
# При решении задания нужно обойтись без встроенной функции возведения числа в степень.
#
# Подсказка: попробуйте решить задачу двумя способами.
# Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

x = float(input('Введте число которое вы будете возводить в степень: '))
y = int(input('Введите целое отрицательное число - показтель стпени: '))


# Вариант со звездочками **
# Вариант со звездочками **
def power2(x, y):
    return x ** y

print(power2(2, -4))

# Вариант с циклом for
def power1(x, y):
    if y >= 0:
        return 'Показатель степени должен быть отрицательным по условаию'
    res = 1/x
    for i in range(1, abs(y)):
        res *= 1/x
    return res

print(power1(2, -4))
print(power1(2, 4))


# 5. Программа запрашивает у пользователя строку чисел, разделённых пробелом.
# При нажатии Enter должна выводиться сумма чисел.
# Пользователь может продолжить ввод чисел, разделённых пробелом и снова нажать Enter.
# Сумма вновь введённых чисел будет добавляться к уже подсчитанной сумме.
# Но если вместо числа вводится специальный символ,
# выполнение программы завершается.
# Если специальный символ введён после нескольких чисел,
# то вначале нужно добавить сумму этих чисел к полученной ранее сумме
# и после этого завершить программу.

def ls_sum():
    total_sum = 0
    while True:
        numbers = input('Введите целые числа через пробел, для выхода введите "q": ').split()
        for el in numbers:
            if el == 'q':
                print(total_sum)
                return
            total_sum += int(el)
        print(total_sum)

ls_sum()


# 6. Реализовать функцию int_func(),
# принимающую слова из маленьких латинских букв и возвращающую их же,
# но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.


def tit(st):
    return(st.lower().title())

# 7. Продолжить работу над заданием.
# В программу должна попадать строка из слов, разделённых пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре.
# Нужно сделать вывод исходной строки, но каждое слово должно начинаться с заглавной буквы.
# Используйте написанную ранее функцию int_func().

print(tit(input('ведите предложение из нескольких слов: ')))